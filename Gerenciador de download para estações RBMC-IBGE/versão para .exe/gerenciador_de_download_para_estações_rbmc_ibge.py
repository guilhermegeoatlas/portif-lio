# -*- coding: utf-8 -*-
"""gerenciador de download para estações RBMC-IBGE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/118O5eKUnKT2m7LfnnQF3vVlELMpbg0gk
"""

#!pip install geopandas
import math

import pandas as pd

df = pd.read_csv("C:/Users/35193/PycharmProjects/PYtoEXE/estacoes_rbmc.csv", encoding = 'utf-8', delimiter = ';')

df.head(20)

# CALCULO PARA CONVERTER COORDENADAS GEODESICAS EM CARTESIANAS TRIDIMENSIONAIS

from numpy import radians

def geo_to_cart3d(lat,lng,h):

#FORMULAÇÃO GEODESICA (PARÂMETROS DO ELIPSOIDE GRS80)

  a = 6378137 #semi eixo maior
  b = 6356752.3141 #semi eixo menor
  e1 = 0.00669438002290 #1º excentricidade
  e2 = 0.00673949677548 #2º excentricidade
  f = 0.00335281068118 #achatamento

  PN = a*(1 - e1)/(1 - e1 * (math.sin(radians(lat)))**2)**0.5 # Pequena Normal
  GN = a/(1 - e1 * (math.sin(radians(lat)))**2)**0.5 # Grande Normal
  X = (GN + h) * math.cos(radians(lat)) * math.cos(radians(lng))
  Y = (GN + h) * math.cos(radians(lat)) * math.sin(radians(lng))
  Z = (PN + h) * math.sin(radians(lat))
  return (X,Y,Z)

from numpy import sqrt
# FUNCAO PARA CALCULAR A DISTANCIA ENTRE COORDENADAS CARTESIANAS 3D
def calc_dist(x2,x1,y2,y1,z2,z1):
  return math.sqrt((x2 - x1)**2 + (y2 - y1)**2 + (z2 - z1)**2)

# SCRIPT PARA IDENTIFICAR O DIA DO RASTREIO
from datetime import datetime

data = datetime.strptime(str(input("Data do rastreio GNSS (dd/mm/aaaa): ")), "%d/%m/%Y") #data do rastreio que deseja-se fazer download
data_zero = datetime.strptime("01/01/" + str(data)[:4], "%d/%m/%Y") #data zero para contagem

calc_data_preliminar = data - data_zero #calculo preliminar para definir os dias corridos da data
calc_data = int(str(calc_data_preliminar)[:3]) + 1 #calculo para definir os dias corridos da data
print(calc_data)

dias = str(calc_data)+'1'

lat = float(input('Digite as coordenadas geodésicas : Latitude(g.ggg° ex: 0.04701323)'))
lng = float(input('Digite as coordenadas geodésicas : Longitude(g.ggg° ex: -51.04246)'))
h = float(input('Digite as coordenadas geodésicas : Altitude elipsoidal(m ex: 20.316)'))

# CRIANDO/PLOTANDO LINHAS COM NOME ESTACAO , COORD CARTESIANAS 3D , DIST DO PONTO DE ANALISE 

'''
i=0
print('Est   |                            Coord XYZ                            |  Distância') #cabeçalho
while i < len(df.index):
  print(df.iloc[i]['Nome_est'],geo_to_cart3d(df.iloc[i]['lat_aprox'],df.iloc[i]['lng_aprox'],0),
        round(calc_dist(geo_to_cart3d(lat,lng,h)[0],geo_to_cart3d(df.iloc[i]['lat_aprox'],df.iloc[i]['lng_aprox'],0)[0],
          geo_to_cart3d(lat,lng,h)[1],geo_to_cart3d(df.iloc[i]['lat_aprox'],df.iloc[i]['lng_aprox'],0)[1],
          geo_to_cart3d(lat,lng,h)[2],geo_to_cart3d(df.iloc[i]['lat_aprox'],df.iloc[i]['lng_aprox'],0)[2]),3), sep = '  |  ' )
  i = i+1
'''

# CRIA DICT COM KEY= NOME DAS ESTAÇÕES E VALUE = DIST. ENTRE COORDENADA DE ENTRADA

i=0
st = {}
while i < len(df.index):

  st[df.iloc[i]['Nome_est']] = round(calc_dist(geo_to_cart3d(lat,lng,h)[0],geo_to_cart3d(df.iloc[i]['lat_aprox'],df.iloc[i]['lng_aprox'],0)[0],
          geo_to_cart3d(lat,lng,h)[1],geo_to_cart3d(df.iloc[i]['lat_aprox'],df.iloc[i]['lng_aprox'],0)[1],
          geo_to_cart3d(lat,lng,h)[2],geo_to_cart3d(df.iloc[i]['lat_aprox'],df.iloc[i]['lng_aprox'],0)[2]),3)
  i = i+1


# CRIA NOVO DICIONARIO COM AS 5 ESTAÇÕES MAIS PROXIMAS DO PONTO DE ANÁLISE. A DISTANCIA ESTÁ EM KM

st_ordem = {}
for i in sorted(st, key = st.get):
    st_ordem[i] = round(st[i]/1000,3)
    if len(st_ordem) == 5:
      break

print('\n\n' + '5 ESTAÇÕES MAIS PRÓXIMAS PARA O RASTREIO DO DIA ' + str(data) + '\n')
for i in list(st_ordem.keys()):
  print(i, ': Dist.', st_ordem[i], 'Km')
  print('Link para download dos arquivos RINEX:')
  print("https://geoftp.ibge.gov.br/informacoes_sobre_posicionamento_geodesico/rbmc/dados/"+str(data)[:4]+"/"+str(calc_data)+"/"+i.lower()+dias+".zip") # linha para baixar os arquivos Rinex.
  print('Link para download do Relatório de Informação de Estação:')
  print("https://geoftp.ibge.gov.br/informacoes_sobre_posicionamento_geodesico/rbmc/relatorio/Descritivo_"+i+'\n')


with open('links_estacoes_RBMC-IBGE.txt', 'w') as arquivo:
  arquivo.write('5 ESTAÇÕES MAIS PRÓXIMAS PARA O RASTREIO DO DIA ' + str(data) + '\n\n')
  for i in list(st_ordem.keys()):
    arquivo.write(i + ': Dist.'+ str(st_ordem[i]) + 'Km'+ '\n')
    arquivo.write('Link para download dos arquivos RINEX:'+ '\n')
    arquivo.write("https://geoftp.ibge.gov.br/informacoes_sobre_posicionamento_geodesico/rbmc/dados/" + str(data)[:4] + "/" + str(calc_data) + "/" + i.lower() + dias + ".zip"+ '\n\n')
    arquivo.write('Link para download do Relatório de Informação de Estação:'+ '\n')
    arquivo.write("https://geoftp.ibge.gov.br/informacoes_sobre_posicionamento_geodesico/rbmc/relatorio/Descritivo_" + i + '\n\n')
    arquivo.write('_________________________________________________________________________________________________________________' + '\n\n')
  arquivo.write('\n\n' + 'Desenvolvido por, Guilherme Torres.'+ '\n')
  arquivo.write('Contato: guilhervieto@gmail.com')



